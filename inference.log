
# The inference output might be:
torch.Size([1, 100, 13])
torch.Size([1, 25, 112, 112])
tensor([[-0.0887, -0.0948, -0.0021,  ...,  0.7376, -0.1593, -0.1588],
        [-0.1069, -0.0945, -0.0028,  ...,  0.7364, -0.1590, -0.1591],
        [-0.1116, -0.0940, -0.0036,  ...,  0.7350, -0.1588, -0.1595],
        ...,
        [-0.0184, -0.0815, -0.0253,  ...,  0.3925, -0.1646, -0.1462],
        [-0.0152, -0.0798, -0.0333,  ...,  0.3358, -0.1695, -0.1300],
        [-0.0136, -0.0779, -0.0470,  ...,  0.1228,  0.1252, -0.1512]])
torch.Size([25, 128])

==========================

torch.Size([1, 200, 13])
torch.Size([1, 50, 112, 112])
tensor([[-0.10590755 -0.0885424   0.00964742 ...  0.78541106 -0.16136746  -0.15291189]
 [-0.11187012 -0.08820734  0.00944356 ...  0.78670716 -0.15966198  -0.15319586]
 [-0.11497926 -0.08787549  0.00908665 ...  0.78717077 -0.15922906  -0.15342724]
 ...
 [-0.02891648 -0.05359361 -0.0116765  ...  0.44861248 -0.1651328  -0.14146683]
 [-0.02247998 -0.05153918 -0.01845645 ...  0.37009075 -0.1694393  -0.12486269]
 [-0.02042701 -0.04920176 -0.02980761 ...  0.14132908  0.0638896  -0.14834262]])
torch.Size([50, 128])

======================================

torch.Size([1, 84, 13])
torch.Size([1, 21, 112, 112])
tensor([[ 0.02173683  0.7959661  -0.02629013 ...  0.09069754  0.22159217  -0.01207334]
 [ 0.02201553  0.810594   -0.02790174 ...  0.08995613  0.19760351  -0.01551662]
 [ 0.0218851   0.82863694 -0.03179551 ...  0.08902452  0.18390514  -0.01514692]
 ...
 [ 0.01304861  0.11315729  0.01856261 ...  0.08940861  0.00458653   0.00400829]
 [ 0.0118171   0.06813843  0.02143023 ...  0.08527904 -0.02095525  -0.00280911]
 [ 0.01047295 -0.00415571  0.02270312 ...  0.07493475 -0.05328951  -0.01202559]])
torch.Size([21, 128])

=======================================

torch.Size([1, 400, 13])
torch.Size([1, 100, 112, 112])
tensor([[-0.00352758  0.83813536  0.09201904 ...  0.40371484  0.27853543  -0.00917351]
 [-0.00370954  0.8379351   0.08970974 ...  0.4165748   0.13884643  -0.01080725]
 [-0.00398439  0.83760494  0.0865115  ...  0.42264128  0.0773297  -0.01209168]
 ...
 [-0.01376476 -0.05013295  0.06964908 ...  0.38606793 -0.16800241   0.01603755]
 [-0.0115702  -0.04844839  0.0665013  ...  0.31757268 -0.16577664   0.02324991]
 [-0.01053312 -0.04700252  0.06004376 ...  0.13100827  0.07428606  -0.03262951]])
torch.Size([100, 128])

# The start scores for the test data are:
[-3.214273  -3.6669817 -3.8399193 -3.9743302 -4.159114  -4.3499117
 -4.3989267 -4.404181  -4.4411807 -4.43583   -4.377288  -4.2411027
 -4.247399  -4.2412534 -4.0229306 -3.8560483 -3.8146665 -3.9160302
 -3.9888375 -4.0244155 -3.939712  -3.678749  -3.2006643 -2.9725544
 -2.19283  ]
[-2.0738566 -2.5114522 -2.8330786 -2.941253  -2.491425  -2.6769667
 -2.8156152 -3.1470816 -3.2858593 -3.4103734 -3.6339047 -3.7652538
 -3.9284477 -4.0566387 -4.1676793 -4.247504  -4.2168856 -4.227703
 -4.1786346 -4.0691996 -3.9831212 -3.8217425 -3.3898883 -2.926102
 -2.1954176]
[0.17597255 0.20986646 0.25299045 0.7798105  1.071713   1.1942053
 1.2717576  1.4455926  1.5154485  1.699275   1.8517779  1.7052683
 1.6057909  1.4765203  1.4153332  1.3371235  1.2516025  1.1912241
 1.0783631  0.9818315  0.85924524 0.75021565 0.6695677  0.4915204
 0.38098097]
[ 1.0879407   1.15037     1.2204249   1.2118441   1.2185776   1.1750311
  1.1902214   1.1662662   1.1200147   1.1270055   1.0646596   0.9427329
  0.8822885   0.7603179   0.5396047   0.2516482  -0.17553289 -0.84684455
 -1.532304   -1.9274075  -2.2282622  -2.631992   -2.7213569  -2.7395864
 -2.1192882 ]

 # V22:
 [array([-1.9979655, -2.647134 , -3.8541396, -3.884765 , -4.090627 ,
       -4.174543 , -4.188051 , -4.157795 , -3.88716  , -3.5859873,
       -3.185833 , -2.7789872, -2.950993 , -3.329679 , -3.72911  ,
       -4.0200105, -4.087121 , -4.0120697, -3.8522313, -3.787944 ,
       -3.9405892, -3.9451685, -3.7576122, -3.181569 , -2.4424348],
      dtype=float32)]
[array([-1.6122204, -2.1932616, -3.0486789, -3.555192 , -3.339969 ,
       -3.525087 , -3.5810764, -3.5811803, -3.5451844, -3.5043151,
       -3.2686176, -3.3750665, -3.527869 , -3.7223618, -4.0227394,
       -4.151221 , -4.1603594, -4.1468167, -4.118502 , -4.084874 ,
       -4.0449514, -3.975413 , -3.8354487, -3.296138 , -2.4068558],
      dtype=float32)]
[array([0.17370862, 0.32960725, 0.54436845, 0.87061644, 1.3954445 ,
       1.6085261 , 1.644726  , 1.5931413 , 1.5945013 , 1.6082588 ,
       1.7793591 , 1.4560449 , 1.331689  , 1.3601284 , 1.3042392 ,
       1.2788295 , 1.2850242 , 1.135461  , 1.0885426 , 1.0432001 ,
       0.8728659 , 0.71920115, 0.66266996, 0.3562416 , 0.4623086 ],
      dtype=float32)]
[array([ 0.8951046 ,  0.9366074 ,  0.999443  ,  1.0145271 ,  1.1637561 ,
        1.2673409 ,  1.2678597 ,  1.1541175 ,  1.0560098 ,  0.904046  ,
        0.69368184,  0.61594665,  0.5123334 ,  0.38386175,  0.18524845,
       -0.2953907 , -0.8198261 , -1.0212783 , -1.2446622 , -1.4986612 ,
       -1.8369719 , -2.9614074 , -3.3188055 , -2.8957098 , -2.3682728 ],
      dtype=float32)]
[array([-1.8806945, -2.3350537, -3.186297 , -3.3833039, -3.2616045,
       -3.5846775, -3.7915022, -4.0535007, -4.0905724, -4.082513 ,
       -4.0450053, -3.8740475, -3.6672769, -3.4295766, -3.4806502,
       -3.6183891, -3.7488234, -3.3337467, -2.9078417, -2.4225416,
       -2.2229502, -2.2034206, -2.343546 , -2.5185168, -2.1945882],
      dtype=float32)]
[array([-1.7176957, -1.8363701, -2.1960044, -2.4255102, -2.9119987,
       -3.3528693, -3.2893207, -3.3147964, -3.19746  , -3.0165231,
       -2.7905428, -2.485654 , -2.3854506, -2.2999282, -2.2828572,
       -2.5432634, -2.9242532, -3.0110648, -2.893205 , -2.8107371,
       -2.9647923, -3.1095726, -3.2415507, -3.2455087, -2.5065024],
      dtype=float32)]